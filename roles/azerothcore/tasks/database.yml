---
#####################
# Create the proper databases/user needed
#####################

- name: Database related scripts
  template:
    src: "sql/{{ item.file }}"
    dest: "/home/{{ azerothcore_user }}/{{ azerothcore_server_release }}/database/"
    owner: "{{ azerothcore_user }}"
    group: "{{ azerothcore_user }}"
    mode: "{{ item.mode }}"
  with_items:
    - { file: "backup.sh", mode: "0755" }
    - { file: "create_databases.sql", mode: "0644" }
    - { file: "drop_databases.sh", mode: "0755" }

# Only run this if there is no previous server aka a new install
- name: Create databases, handle users etc.
  shell: mysql < "/home/{{ azerothcore_user }}/{{ azerothcore_server_release }}/database/create_databases.sql"
  when: former_build.stat.exists is defined and former_build.stat.exists == false
  become: true

#####################
# Importing SQL
#####################

- name: Assemble and import initial databases
  shell: "bash /home/{{ azerothcore_user }}/{{ azerothcore_source }}/apps/db_assembler/db_assembler.sh 5"
  when: former_build.stat.exists is defined and former_build.stat.exists == false

#####################
# Backup SQL
#####################

- name: Backup databases
  shell: cd "/home/{{ azerothcore_user }}/{{ azerothcore_server }}/database/" && ./backup.sh
  when: former_build.stat.exists is defined and former_build.stat.exists == true

#####################
# Updating SQL after the backup
#####################

- name: Update databases
  shell: "bash /home/{{ azerothcore_user }}/{{ azerothcore_source }}/apps/db_assembler/db_assembler.sh 5"
  when: former_build.stat.exists is defined and former_build.stat.exists == false
